networks:
  ingress:
    name: ingress
    external: true

volumes:
  traefik: {}

services:
  traefik:
    image: traefik:v3.1.2
    container_name: traefik
    command:
      - --api.insecure=true
      - --providers.docker=true
      - --entryPoints.web.address=:80
      - --entryPoints.websecure.address=:443
      - --certificatesresolvers.myresolver.acme.tlschallenge=true
      - --certificatesresolvers.myresolver.acme.dnschallenge=true
      - --certificatesresolvers.myresolver.acme.dnschallenge.provider=cloudflare
      #- --certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory
      - --certificatesresolvers.myresolver.acme.email=${EMAIL}
      - --certificatesresolvers.myresolver.acme.storage=/traefik_vol/acme.json
    environment:
      - CF_API_EMAIL=${EMAIL}
      - CF_DNS_API_TOKEN=${CF_TOKEN}
    labels:
      - traefik.enable=true
      - traefik.http.routers.traefik-dashboard.tls=true
      - traefik.http.routers.traefik-dashboard.service=traefik-dashboard
      - traefik.http.routers.traefik-dashboard.rule=Host(`traefik.${DOMAIN}`)
      - traefik.http.services.traefik-dashboard.loadbalancer.server.port=8080
    ports:
      # The HTTP port
      - 80:80
      # The HTTPS port
      - 443:443
      # The traefik dashboard port
      - 8080:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik:/traefik_vol
    networks:
      - ingress
    restart: always

  cloudflare-companion:
    image: tiredofit/traefik-cloudflare-companion
    container_name: cloudflare-companion
    environment:
      - CF_EMAIL=${EMAIL}
      - CF_TOKEN=${CF_TOKEN}
      - TARGET_DOMAIN=${DOMAIN}
      - DOMAIN1=${DOMAIN}
      - DOMAIN1_PROXIED=true
      - DOMAIN1_ZONE_ID=${DOMAIN_ZONE_ID}
      - TIMEZONE=${TIMEZONE}
    networks:
      - ingress
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always
