networks:
  ingress:
    name: ingress
    external: true

volumes:
  traefik: {}

services:
  traefik:
    image: traefik:v3.1.2
    container_name: traefik
    command:
      - --log.level=INFO
      - --providers.docker=true
      - --api.insecure=true
      - --api.dashboard=true
      - --accesslog=true

      # Configure entrypoint
      - --entryPoints.web.address=:80
      - --entryPoints.websecure.address=:443
      - --entryPoints.web.http.redirections.entryPoint.to=websecure
      - --entryPoints.web.http.redirections.entryPoint.scheme=https

      # Set up LetsEncrypt
      - --certificatesresolvers.myresolver.acme.tlschallenge=true
      - --certificatesresolvers.myresolver.acme.dnschallenge=true
      - --certificatesresolvers.myresolver.acme.dnschallenge.provider=cloudflare
      - --certificatesresolvers.myresolver.acme.email=${EMAIL}
      - --certificatesresolvers.myresolver.acme.storage=/traefik_vol/acme.json
      - --certificatesresolvers.myresolver.acme.dnschallenge.resolvers=1.1.1.1:53,8.8.8.8:53

      # Set up the TLS configuration for our websecure listener (basically gives wildcard cert for the main domain)
      - --entrypoints.websecure.http.tls=true
      - --entrypoints.websecure.http.tls.certResolver=myresolver
      - --entrypoints.websecure.http.tls.domains[0].main=${DOMAIN}
      - --entrypoints.websecure.http.tls.domains[0].sans=*.${DOMAIN}

      # Allow these IPs to set the X-Forwarded-* headers - Cloudflare IPs: https://www.cloudflare.com/ips/
      - --entrypoints.web.forwardedHeaders.trustedIPs=173.245.48.0/20,103.21.244.0/22,103.22.200.0/22,103.31.4.0/22,141.101.64.0/18,108.162.192.0/18,190.93.240.0/20,188.114.96.0/20,197.234.240.0/22,198.41.128.0/17,162.158.0.0/15,104.16.0.0/12,172.64.0.0/13,131.0.72.0/22
    environment:
      - CF_API_EMAIL: ${EMAIL}
      - CF_DNS_API_TOKEN: ${CF_TOKEN}
    ports:
      # The HTTP port
      - 80:80
      # The HTTPS port
      - 443:443
      # The traefik dashboard port
      - 8080:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik:/traefik_vol
    networks:
      - ingress
    restart: always

  cloudflare-companion:
    image: tiredofit/traefik-cloudflare-companion
    container_name: cloudflare-companion
    environment:
      - CF_EMAIL=${EMAIL}
      - CF_TOKEN=${CF_TOKEN}
      - TARGET_DOMAIN=${DOMAIN}
      - DOMAIN1=${DOMAIN}
      - DOMAIN1_PROXIED=true
      - DOMAIN1_ZONE_ID=${DOMAIN_ZONE_ID}
      - TIMEZONE=${TIMEZONE}
    networks:
      - ingress
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always

  cloudflare-ddns:
    # Choose the appropriate tag based on your need:
    # - "latest" for the latest stable version (which could become 2.x.y
    #   in the future and break things)
    # - "1" for the latest stable version whose major version is 1
    # - "1.x.y" to pin the specific version 1.x.y
    image: favonia/cloudflare-ddns:latest
    container_name: cloudflare-ddns
    # This bypasses network isolation and makes IPv6 easier (optional; see below)
    network_mode: host
    # Make the container filesystem read-only (optional but recommended)
    read_only: true
    # Drop all Linux capabilities (optional but recommended)
    cap_drop: [all]
    # Another protection to restrict superuser privileges (optional but recommended)
    security_opt: [no-new-privileges:true]
    environment:
        # Your Cloudflare API token
      - CF_API_TOKEN=${CF_TOKEN}
        # Your domains (separated by commas)
      - DOMAINS=${DOMAIN}
        # Tell Cloudflare to cache webpages and hide your IP (optional)
      - PROXIED=true
    restart: always
