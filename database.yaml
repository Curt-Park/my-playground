networks:
  database: {}
  ingress:
    name: ingress
    external: true

volumes:
  postgres: {}
  chromadb: {}
  vectoradmin-storage: {}
  vectoradmin-hotdir: {}

services:
  postgres:
    image: postgres:16
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - database
    restart: always

  chromadb:
    image: chromadb/chroma:0.5.3
    container_name: chromadb
    environment:
      IS_PERSISTENT: TRUE
    command: "--workers 1 --host 0.0.0.0 --port 8000 --proxy-headers --log-config chromadb/log_config.yml --timeout-keep-alive 30"
    healthcheck:
      # Adjust below to match your container port
      test: [ "CMD", "curl", "-f", "http://localhost:8000/api/v1/heartbeat" ]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      # Be aware that indexed data are located in "/chroma/chroma/"
      # Default configuration for persist_directory in chromadb/config.py
      # Read more about deployments: https://docs.trychroma.com/deployment
      - chromadb:/chroma/chroma
    networks:
      - database
    restart: always

  vectoradmin-proxy:
    image: docker.io/kalaksi/tinyproxy:latest
    container_name: vectoradmin-proxy
    labels:
      - traefik.enable=true
      - traefik.http.routers.vectoradmin-proxy.entrypoints=websecure
      - traefik.http.routers.vectoradmin-proxy.tls.certresolver=myresolver
      - traefik.http.routers.vectoradmin-proxy.rule=Host(`vectoradmin.${DOMAIN}`)
      - traefik.http.services.vectoradmin-proxy.loadbalancer.server.port=8888
    entrypoint: /bin/sh
    # command: -c "echo \"$$CONFIG\" > /etc/tinyproxy/tinyproxy.conf && exec /usr/bin/tinyproxy -d"
    command: >
      -c "echo \"$$CONFIG\" > /etc/tinyproxy/tinyproxy.conf &&
      tinyproxy -d -c /etc/tinyproxy/tinyproxy.conf"
    # See tinyproxy.conf for better explanation of these values.
    # https://tinyproxy.github.io/
    environment:
      CONFIG: |
        Port 8888
        LogLevel Info
        Timeout 600
        ReversePath "/" "http://vectoradmin:3001/"
    networks:
      - ingress
      - database
    restart: always

  vectoradmin:
    image: mintplexlabs/vectoradmin:latest
    container_name: vectoradmin
    environment:
      SERVER_PORT: 3001
      JWT_SECRET: "your-random-string-here"
      INNGEST_EVENT_KEY: "background_workers"
      INNGEST_SIGNING_KEY: "random-string-goes-here"
      INNGEST_LANDING_PAGE: "true"
      DATABASE_CONNECTION_STRING: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/vdbms"
    volumes:
      - vectoradmin-storage:/app/backend/storage
      - vectoradmin-hotdir:/app/document-processor/hotdir
    networks:
      - database
    depends_on:
      - postgres
    restart: always
