---
networks:
  ingress:
    name: ingress
    external: true

volumes:
  filebrowser:
    name: filebrowser_filebrowser
    external: true

services:
  dozzle:
    image: amir20/dozzle:latest
    container_name: dozzle
    labels:
      - traefik.enable=true
      - traefik.http.routers.dozzle.entrypoints=websecure
      - traefik.http.routers.dozzle.middlewares=authentik-dozzle@docker
      - traefik.http.routers.dozzle.rule=Host(`dozzle.${DOMAIN}`)
      - traefik.http.services.dozzle.loadbalancer.server.port=8080
    ports:
      - 18888:8080
    environment:
      DOZZLE_AUTH_PROVIDER: simple
      DOZZLE_AUTH_TTL: 48h
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - type: volume
        source: filebrowser
        target: /data
        volume:
          subpath: dozzle
    networks:
      - ingress
    restart: unless-stopped

  authentik-proxy:
    image: ghcr.io/goauthentik/proxy:2024.8.3
    environment:
      AUTHENTIK_HOST: http://authentik:9000
      AUTHENTIK_INSECURE: "false"
      AUTHENTIK_TOKEN: ${AUTHENTIK_ACCESS_TOKEN}
    labels:
      - traefik.enable=true
      - traefik.port=9000
      - traefik.http.routers.authentik-dozzle.rule=Host(`dozzle.${DOMAIN}`) && PathPrefix(`/outpost.goauthentik.io/`)
      # `authentik-proxy` refers to the service name in the compose file.
      - traefik.http.middlewares.authentik-dozzle.forwardauth.address=http://authentik-proxy:9000/outpost.goauthentik.io/auth/traefik
      - traefik.http.middlewares.authentik-dozzle.forwardauth.trustForwardHeader=true
      - traefik.http.middlewares.authentik-dozzle.forwardauth.authResponseHeaders=X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid,X-authentik-jwt,X-authentik-meta-jwks,X-authentik-meta-outpost,X-authentik-meta-provider,X-authentik-meta-app,X-authentik-meta-version
    networks:
      - ingress
    restart: unless-stopped
