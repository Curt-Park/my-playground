# https://docs.n8n.io/hosting/installation/server-setups/docker-compose/
# https://docs.n8n.io/hosting/configuration/environment-variables/
---
networks:
  ingress:
    name: ingress
    external: true

volumes:
  n8n_data: {}
  n8n-db_data: {}
  n8n-mq_data: {}

services:
  n8n-db:
    image: postgres:16-alpine
    container_name: n8n-db
    environment:
      POSTGRES_DB: ${N8N_DATABASE_NAME}
      POSTGRES_USER: ${N8N_DATABASE_USER}
      POSTGRES_PASSWORD: ${N8N_DATABASE_PW}
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U ${N8N_DATABASE_USER} -d ${N8N_DATABASE_NAME}']
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - n8n-db_data:/var/lib/postgresql/data
    networks:
      - ingress
    restart: unless-stopped

  n8n-mq:
    image: redis:7.4.1
    container_name: n8n-mq
    volumes:
      - n8n-mq_data:/data
    networks:
      - ingress
    restart: unless-stopped

  n8n:
    image: docker.n8n.io/n8nio/n8n:1.114.4
    container_name: n8n
    labels:
      - traefik.enable=true
      - traefik.http.routers.n8n.entrypoints=websecure
      - traefik.http.routers.n8n.rule=Host(`n8n.${DOMAIN}`)
      - traefik.http.routers.n8n.middlewares=authentik-proxy@docker
      - traefik.http.services.n8n.loadbalancer.server.port=5678
    environment:
      # N8n deployment
      N8N_HOST: n8n.${DOMAIN}
      N8N_PROTOCOL: https
      N8N_PROXY_HOPS: 1
      N8N_SECURE_COOKIE: false
      WEBHOOK_URL: https://n8n.${DOMAIN}/
      # smtp
      N8N_SMTP_HOST: ${N8N_SMTP_HOST}
      N8N_SMTP_PORT: ${N8N_SMTP_PORT}
      N8N_SMTP_USER: ${N8N_SMTP_USER:-${EMAIL}}
      N8N_SMTP_SENDER: ${N8N_SMTP_SENDER:-${EMAIL}}
      N8N_SMTP_PASS: ${N8N_SMTP_PASS}
      # db
      DB_POSTGRESDB_DATABASE: ${N8N_DATABASE_NAME}
      DB_POSTGRESDB_USER: ${N8N_DATABASE_USER}
      DB_POSTGRESDB_PASSWORD: ${N8N_DATABASE_PW}
      DB_POSTGRESDB_HOST: n8n-db
      DB_POSTGRESDB_PORT: 5432
      DB_TYPE: postgresdb
      # N8n queue mode
      N8N_ENCRYPTION_KEY: ${N8N_ENCRYPTION_KEY}
      QUEUE_BULL_REDIS_HOST: n8n-mq
      QUEUE_BULL_REDIS_PORT: 6379
      # General
      GENERIC_TIMEZONE: ${TIMEZONE}
      TZ: ${TIMEZONE}
    networks:
      - ingress
    volumes:
      - n8n_data:/home/node/.n8n
    depends_on:
      - n8n-db
    restart: unless-stopped

  n8n-workers:
    image: docker.n8n.io/n8nio/n8n:1.114.4
    command: ["worker"]
    deploy:
      replicas: 1
    environment:
      N8N_ENCRYPTION_KEY: ${N8N_ENCRYPTION_KEY}
      EXECUTIONS_MODE: queue
      QUEUE_BULL_REDIS_HOST: n8n-mq
      QUEUE_BULL_REDIS_PORT: 6379
      DB_POSTGRESDB_DATABASE: ${N8N_DATABASE_NAME}
      DB_POSTGRESDB_USER: ${N8N_DATABASE_USER}
      DB_POSTGRESDB_PASSWORD: ${N8N_DATABASE_PW}
      DB_POSTGRESDB_HOST: n8n-db
      DB_POSTGRESDB_PORT: 5432
      DB_TYPE: postgresdb
    networks:
      - ingress
    depends_on:
      - n8n-db
      - n8n-mq
      - n8n
    restart: unless-stopped
