---
networks:
  ingress:
    name: ingress
    external: true

volumes:
  flowise: {}
  flowise-db: {}

services:
  flowise:
    image: flowiseai/flowise:2.2.3
    container_name: flowise
    labels:
      - traefik.enable=true
      - traefik.http.routers.flowise.entrypoints=websecure
      - traefik.http.routers.flowise.rule=Host(`flowise.${DOMAIN}`)
      - traefik.http.routers.flowise.middlewares=authentik-proxy@docker
      - traefik.http.services.flowise.loadbalancer.server.port=3000
    environment:
      DEBUG: true
      LOG_LEVEL: debug
      DATABASE_TYPE: postgres
      DATABASE_PORT: 5432
      DATABASE_HOST: postgres
      DATABASE_NAME: flowise
      DATABASE_USER: ${FLOWISE_DATABASE_USER}
      DATABASE_PASSWORD: ${FLOWISE_DATABASE_PW}
      PORT: 3000
      SHOW_COMMUNITY_NODES: true
    volumes:
      - flowise:/root/.flowise
    networks:
      - ingress
    restart: always

  flowise-db:
    image: postgres:16-alpine
    container_name: flowise-db
    environment:
      POSTGRES_DB: flowise
      POSTGRES_USER: ${FLOWISE_DATABASE_USER}
      POSTGRES_PASSWORD: ${FLOWISE_DATABASE_PW}
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U ${N8N_DATABASE_USER} -d ${N8N_DATABASE_NAME}']
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - flowise-db:/var/lib/postgresql/data
    networks:
      - ingress
    restart: always
