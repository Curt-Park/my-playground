networks:
  flowise: {}
  database:
    name: database_database
    external: true
  ingress:
    name: ingress
    external: true

volumes:
  flowise: {}

services:
  flowise-proxy:
    image: docker.io/kalaksi/tinyproxy:latest
    container_name: flowise-proxy
    labels:
      - traefik.enable=true
      - traefik.http.routers.flowise-proxy.entrypoints=websecure
      - traefik.http.routers.flowise-proxy.rule=Host(`flowise.${DOMAIN}`)
      - traefik.http.services.flowise-proxy.loadbalancer.server.port=8888
    entrypoint: /bin/sh
    # command: -c "echo \"$$CONFIG\" > /etc/tinyproxy/tinyproxy.conf && exec /usr/bin/tinyproxy -d"
    command: >
      -c "echo \"$$CONFIG\" > /etc/tinyproxy/tinyproxy.conf &&
      tinyproxy -d -c /etc/tinyproxy/tinyproxy.conf"
    ports:
      - 3000:8888
    # See tinyproxy.conf for better explanation of these values.
    # https://tinyproxy.github.io/
    environment:
      CONFIG: |
        Port 8888
        LogLevel Info
        Timeout 600
        ReversePath "/" "http://flowise:3000/"
    networks:
      - flowise
      - ingress
    restart: always

  flowise:
    image: flowiseai/flowise:2.1.1
    container_name: flowise
    environment:
      DEBUG: true
      LOG_LEVEL: debug
      DATABASE_TYPE: postgres
      DATABASE_PORT: 5432
      DATABASE_HOST: postgres
      DATABASE_NAME: flowise
      DATABASE_USER: ${POSTGRES_USER}
      DATABASE_PASSWORD: ${POSTGRES_PASSWORD}
      PORT: 3000
      FLOWISE_USERNAME: ${EMAIL}
      FLOWISE_PASSWORD: ${PASSWORD}
      SHOW_COMMUNITY_NODES: true
    volumes:
      - flowise:/root/.flowise
    networks:
      - flowise
      - ingress
      - database
    restart: always
