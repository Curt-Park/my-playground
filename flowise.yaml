networks:
  flowise: {}
  database:
    name: database_database
    external: true
  ingress:
    name: ingress
    external: true

volumes:
  flowise: {}

services:
  flowise:
    image: flowiseai/flowise:2.1.1
    container_name: flowise
    labels:
      - traefik.enable=true
      - traefik.http.routers.flowise.rule=Host(`flowise.${DOMAIN}`)
      - traefik.http.routers.flowise.tls.certresolver=myresolver
#      - traefik.http.routers.flowise.service=flowise
#      - traefik.http.services.flowise.loadbalancer.server.port=3000
      - traefik.http.routers.flowise.middlewares=flowise-redirect-to-port
      - traefik.http.middlewares.flowise-redirect-to-port.redirectregex.regex=^https://flowise.${DOMAIN}/(.*)
      - traefik.http.middlewares.flowise-redirect-to-port.redirectregex.replacement=http://172.30.1.75:3000/$${1}"
    ports:
      - 3000:3000
    environment:
      DEBUG: true
      LOG_LEVEL: debug
      DATABASE_TYPE: postgres
      DATABASE_PORT: 5432
      DATABASE_HOST: postgres
      DATABASE_NAME: flowise
      DATABASE_USER: ${POSTGRES_USER}
      DATABASE_PASSWORD: ${POSTGRES_PASSWORD}
      PORT: 3000
      FLOWISE_USERNAME: ${EMAIL}
      FLOWISE_PASSWORD: ${FLOWISE_PASSWORD}
      SHOW_COMMUNITY_NODES: true
    volumes:
      - flowise:/root/.flowise
    networks:
      - flowise
      - ingress
      - database
    restart: always
