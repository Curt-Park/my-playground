---
networks:
  windmill: {}
  ingress:
    name: ingress
    external: true

volumes:
  windmilldb_data: {}
  worker_dependency_cache: {}
  worker_logs: {}

services:
  windmill-db:
    image: postgres:16
    container_name: windmill-db
    environment:
      POSTGRES_PASSWORD: changeme
      POSTGRES_DB: windmill
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - windmill
    volumes:
      - windmilldb_data:/var/lib/postgresql/data
    restart: unless-stopped

  windmill:
    image: ghcr.io/windmill-labs/windmill:1.410.3
    container_name: windmill
    pull_policy: always
    labels:
      - traefik.enable=true
      - traefik.http.routers.windmill.entrypoints=websecure
      - traefik.http.routers.windmill.rule=Host(`windmill.${DOMAIN}`)
      - traefik.http.services.windmill.loadbalancer.server.port=8000
    environment:
      - DATABASE_URL=postgres://postgres:changeme@windmill-db/windmill?sslmode=disable
      - MODE=server
    depends_on:
      - windmill-db
    networks:
      - windmill
      - ingress
    volumes:
      - worker_logs:/tmp/windmill/logs
    restart: unless-stopped

  windmill-worker:
    image: ghcr.io/windmill-labs/windmill:1.410.3
    container_name: windmill-worker
    pull_policy: always
    environment:
      - DATABASE_URL=postgres://postgres:changeme@windmill-db/windmill?sslmode=disable
      - MODE=worker
      - WORKER_GROUP=default
    depends_on:
      - windmill-db
    networks:
      - windmill
    # to mount the worker folder to debug, KEEP_JOB_DIR=true and mount /tmp/windmill
    volumes:
      # mount the docker socket to allow to run docker containers from within the workers
      - /var/run/docker.sock:/var/run/docker.sock
      - worker_dependency_cache:/tmp/windmill/cache
      - worker_logs:/tmp/windmill/logs
    restart: unless-stopped

  ## This worker is specialized for "native" jobs. Native jobs run in-process and thus are much more lightweight than other jobs
  windmill-worker-native:
    # Use ghcr.io/windmill-labs/windmill-ee:main for the ee
    image: ghcr.io/windmill-labs/windmill:1.410.3
    container_name: windmill-worker-native
    pull_policy: always
    environment:
      - DATABASE_URL=postgres://postgres:changeme@windmill-db/windmill?sslmode=disable
      - MODE=worker
      - WORKER_GROUP=native
      - NUM_WORKERS=8
      - SLEEP_QUEUE=200
    depends_on:
      - windmill-db
    networks:
      - windmill
    volumes:
      - worker_logs:/tmp/windmill/logs
    restart: unless-stopped

  # This worker is specialized for reports or scraping jobs.
  # It is assigned the "reports" worker group which has an init script that installs chromium and can be targeted by using the "chromium" worker tag.
  windmill-worker-reports:
    image: ghcr.io/windmill-labs/windmill:1.410.3
    container_name: windmill-worker-reports
    pull_policy: always
    environment:
      - DATABASE_URL=postgres://postgres:changeme@windmill-db/windmill?sslmode=disable
      - MODE=worker
      - WORKER_GROUP=reports
    depends_on:
      - windmill-db
    networks:
      - windmill
    # to mount the worker folder to debug, KEEP_JOB_DIR=true and mount /tmp/windmill
    volumes:
      # mount the docker socket to allow to run docker containers from within the workers
      - /var/run/docker.sock:/var/run/docker.sock
      - worker_dependency_cache:/tmp/windmill/cache
      - worker_logs:/tmp/windmill/logs
    restart: unless-stopped
